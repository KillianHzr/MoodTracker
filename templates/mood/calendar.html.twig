{% extends 'base.html.twig' %}

{% block title %}Mood Calendar{% endblock %}

{% block body %}
    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
        <div class="flex justify-center gap-16 items-end mb-6">
            <a href="{{ path('app_mood_calendar', { 'year': previousMonth|date('Y'), 'month': previousMonth|date('m') }) }}" class="relative rounded-full mt-6 px-4 py-1 text-sm/6 text-gray-600 ring-1 ring-gray-900/10 hover:ring-gray-900/20">&larr; Previous Month</a>
            <div class="flex flex-col items-center">
                <h1 class="text-center text-2xl font-bold">Mood Calendar</h1>
                <h2 class="text-center text-xl">{{ startDate|date("F Y") }}</h2>
            </div>
            <a href="{{ path('app_mood_calendar', { 'year': nextMonth|date('Y'), 'month': nextMonth|date('m') }) }}" class="relative rounded-full mt-6 px-4 py-1 text-sm/6 text-gray-600 ring-1 ring-gray-900/10 hover:ring-gray-900/20">Next Month &rarr;</a>
        </div>

        {% set today = "now"|date("Y-m-d") %}

        <div class="flex justify-center">
            <table class="text-center border-collapse">
                <thead>
                <tr class="text-gray-600 font-bold text-lg border-b-2">
                    <th class="py-3">M</th>
                    <th class="py-3">T</th>
                    <th class="py-3">W</th>
                    <th class="py-3">T</th>
                    <th class="py-3">F</th>
                    <th class="py-3">S</th>
                    <th class="py-3">S</th>
                </tr>
                </thead>
                <tbody>
                {% set first_day_of_month = startDate|date("N") %}
                {% set days_in_month = endDate|date("t") %}
                {% set day = 1 %}

                {% for week in 0..5 %}
                    <tr>
                        {% for dayOfWeek in 1..7 %}
                            {% if week == 0 and dayOfWeek < first_day_of_month %}
                                <td></td>
                            {% elseif day <= days_in_month %}
                                {% set formattedMonth = "%02d"|format(month) %}
                                {% set formattedDay = "%02d"|format(day) %}
                                {% set date = year ~ '-' ~ formattedMonth ~ '-' ~ formattedDay %}
                                {% set entry = moodEntries|filter(e => e.date|date('Y-m-d') == date)|first %}
                                {% set moodClass = '' %}
                                {% if entry %}
                                    {% set moodClass = {
                                        1: 'border-red-600 text-red-600 hover:text-white',
                                        2: 'border-orange-500 text-orange-500 hover:text-white',
                                        3: 'border-yellow-400 text-yellow-400 hover:text-white',
                                        4: 'border-lime-400 text-lime-400 hover:text-white',
                                        5: 'border-green-600 text-green-600 hover:text-white'
                                    }[entry.mood] %}
                                {% endif %}

                                {% set isTodayClass = date == today ? 'today-highlight' : '' %}

                                <td class="p-2">
                                    <div class="calendar-day border-2 {{ moodClass }} {{ isTodayClass }} rounded-full h-16 w-16 {% if entry %}cursor-pointer{% endif %} relative mx-auto flex items-center justify-center transition-colors duration-300"
                                            {% if entry %}
                                        data-mood="{{ entry.mood }}"
                                        data-note="{{ entry.note }}"
                                        data-svg="{{ asset('images/emoji_' ~ entry.mood ~ '.svg') }}"
                                            {% endif %}>
                                        <div class="font-bold">{{ day }}</div>

                                        {% if entry %}
                                            <img src="{{ asset('images/emoji_' ~ entry.mood ~ '.svg') }}" alt="Mood {{ entry.mood }}" class="absolute inset-0 w-full h-full object-cover opacity-0 hover:opacity-100 transition-opacity duration-300">
                                        {% endif %}
                                    </div>
                                </td>
                                {% set day = day + 1 %}
                            {% else %}
                                <td></td>
                            {% endif %}
                        {% endfor %}
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>

        <div id="mood-modal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden flex items-center justify-center">
            <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
                <h2 class="text-xl font-bold mb-4">Mood Details</h2>
                <p><strong>Mood:</strong> <img class="mood w-8 h-8 inline-block" src="" alt="Mood" /></p>
                <p><strong>Note:</strong> <span class="note"></span></p>
                <button onclick="document.getElementById('mood-modal').classList.add('hidden')" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded">Close</button>
            </div>
        </div>
    {% else %}
        <div class="flex flex-col items-center mt-10">
            <p class="text-xl font-semibold mb-4">You must be logged in to view the Mood Calendar.</p>
            <div class="flex gap-4">
                <a href="{{ path('app_register') }}" class="bg-green-500 text-white px-4 py-2 rounded">Register</a>
                <a href="{{ path('app_login') }}" class="bg-blue-500 text-white px-4 py-2 rounded">Login</a>
            </div>
        </div>
    {% endif %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const days = document.querySelectorAll('.calendar-day');

            days.forEach(day => {
                const mood = day.getAttribute('data-mood');

                if (mood) {
                    day.addEventListener('click', () => {
                        const note = day.getAttribute('data-note');
                        const svgPath = day.getAttribute('data-svg');
                        showModal(mood, note, svgPath);
                    });
                }
            });

            function showModal(mood, note, svgPath) {
                const modal = document.getElementById('mood-modal');
                const moodImg = modal.querySelector('.mood');

                if (svgPath) {
                    moodImg.src = svgPath;
                    moodImg.alt = `Mood ${mood}`;
                } else {
                    moodImg.src = '';
                    moodImg.alt = 'No mood recorded';
                }

                modal.querySelector('.note').textContent = note || 'No note added';
                modal.classList.remove('hidden');
            }
        });
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .today-highlight {
            box-shadow: 0 0 8px rgba(30, 144, 255, 0.6);
        }
    </style>
{% endblock %}
